@page "/UserProfile"
@inject NavigationManager Navigation

@inject AuthService AuthService
@inject ILocalStorageService LocalStorage

<h2>Quản lý Thông tin Cá nhân</h2>

@if (user == null)
{
    <p>Đang tải dữ liệu...</p>
}
else
{
    <!-- Modal chi tiết -->
    <div class="modal-background" style="display:@(showDetailsModal ? "flex" : "none")">
        <div class="modal-content">
            <h3>Thông tin chi tiết</h3>
            <label><strong>Họ tên:</strong></label>
            <p>@user.FullName</p>
            <label><strong>Email:</strong></label>
            <p>@user.Email</p>
            <label><strong>Vai trò:</strong></label>
            <p>@user.RoleName</p>
            <label><strong>Địa chỉ:</strong></label>
            <p>@user.Address</p>
            <label><strong>Số điện thoại:</strong></label>
            <p>@user.Phone</p>
            <button class="close-btn" @onclick="() => showDetailsModal = false">Đóng</button>
        </div>
    </div>
    <!-- Modal đổi mật khẩu -->
    <div class="modal-background" style="display:@(showChangePasswordModal ? "flex" : "none")">
        <div class="modal-content">
            <EditForm Model="passwordModel" OnValidSubmit="HandleChangePassword">
                <div>
                    <label>Mật khẩu cũ:</label>
                    <InputText type="password" @bind-Value="passwordModel.OldPassword" />
                </div>
                <div>
                    <label>Mật khẩu mới:</label>
                    <InputText type="password" @bind-Value="passwordModel.NewPassword" />
                </div>
                <div>
                    <label>Xác nhận mật khẩu mới:</label>
                    <InputText type="password" @bind-Value="passwordModel.ConfirmPassword" />
                </div>
                <button type="submit">Đổi mật khẩu</button>
                <button type="button" class="close-btn" @onclick="() => showChangePasswordModal = false">Đóng</button>
            </EditForm>
        </div>
    </div>

    <!-- Modal sửa -->
    <div class="modal-background" style="display:@(showEditModal ? "flex" : "none")">
        <div class="modal-content">
            <EditForm Model="user" OnValidSubmit="HandleUpdateProfile">
                <div>
                    <label>Họ và Tên:</label>
                    <InputText @bind-Value="user.FullName" />
                </div>
                <div>
                    <label>Email:</label>
                    <InputText @bind-Value="user.Email" />
                </div>
                <div>
                    <label>Địa chỉ:</label>
                    <InputText @bind-Value="user.Address" />
                </div>
                <div>
                    <label>Số điện thoại:</label>
                    <InputText @bind-Value="user.Phone" />
                </div>
                <button type="submit">Cập nhật</button>
                <button class="close-btn" type="button" @onclick="() => showEditModal = false">Đóng</button>
            </EditForm>
        </div>
    </div>

    <!-- Menu chức năng -->
    <div class="menu">
        @if (!string.IsNullOrEmpty(message))
        {
            <div class="alert @(messageType == "success" ? "alert-success" : "alert-danger")" style="position: relative;">
                @message
                <button @onclick="() => message = null" class="close-alert-btn">×</button>
            </div>
        }

        <div class="menu-item" @onclick="() => showDetailsModal = true">
            <i class="fas fa-cog"></i>
            <span>Xem chi tiết Thông tin cá nhân</span>
        </div>

        @if (user.RoleName == "Customer")
        {
            <div class="menu-item">
                <i class="fas fa-history"></i>
                <a href="/order-history" style="color: black; text-decoration: none;">Lịch sử mua hàng</a>
            </div>
        }

        <div class="menu-item" @onclick="() => showEditModal = true">
            <i class="fas fa-edit"></i>
            <span>Sửa thông tin cá nhân</span>
        </div>

        <div class="menu-item" @onclick="() => showChangePasswordModal = true">
            <i class="fas fa-key"></i>
            <span>Đổi mật khẩu</span>
        </div>

        <div class="menu-item">
            <button class="close-btn" @onclick="Logout">Đăng xuất</button>
        </div>
    </div>
}

@code {
    string? message;
    string? messageType; 
    // "success" or "error"



    ChangePasswordModel passwordModel = new();
    bool showChangePasswordModal = false;

 
    UserProfileModel? user;
    bool showDetailsModal = false;
    bool showEditModal = false;

    protected override async Task OnInitializedAsync()
    {
        user = await AuthService.GetUserProfileAsync();
    }
    async Task HandleUpdateProfile()
    {
        var result = await AuthService.UpdateUserProfileAsync(user!);
        if (result)
        {
            showEditModal = false;
            message = "Cập nhật thông tin thành công!";
            messageType = "success";
        }
        else
        {
            message = "Cập nhật thất bại. Vui lòng thử lại.";
            messageType = "error";
        }
    }

    async Task HandleChangePassword()
    {
        var result = await AuthService.ChangePasswordAsync(passwordModel);
        if (result.IsSuccess)
        {
            showChangePasswordModal = false;
            message = "Đổi mật khẩu thành công!";
            messageType = "success";
        }
        else
        {
            message = result.ErrorMessage ?? "Có lỗi xảy ra khi đổi mật khẩu.";
            messageType = "error";
        }

        passwordModel = new(); // clear form
    }


    async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }
}
 <style>

    .menu {
        background-color: #f8f9fa;
        padding: 10px;
        border-radius: 5px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .close-alert-btn {
        position: absolute;
        right: 10px;
        top: 5px;
        background: none;
        border: none;
        font-size: 1.2rem;
        cursor: pointer;
        color: #333;
    }


    .menu-item {
        display: flex;
        align-items: center;
        padding: 10px;
        cursor: pointer;
        transition: background-color 0.3s;
    }


        .menu-item:hover {
            background-color: #e9ecef;
        }


        .menu-item i {
            margin-right: 10px;
        }


        .menu-item span {
            font-size: 16px;
        }

    body {
        background-color: #f0f0f0;
        margin: 0;
        font-family: Arial, sans-serif;
    }


    .modal-background {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        justify-content: center;
        align-items: center;
    }


    .modal-content {
        background-color: white;
        padding: 30px;
        border-radius: 10px;
        text-align: left;
        max-width: 400px;
        width: 100%;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    }


        .modal-content div {
            background-color: #f8f9fa;
            padding: 10px;
            margin-bottom: 15px;
            border-radius: 5px;
        }

    input[type="text"],
    input[type="email"],
    input[type="password"] {
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
        width: 100%;
        box-sizing: border-box;
    }


    button[type="submit"] {
        background-color: #007bff;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
        font-size: 16px;
        margin-top: 10px;
        display: inline-block;
    }


        button[type="submit"]:hover {
            background-color: #0056b3;
        }

    .close-btn {
        margin-top: 20px;
        background-color: #dc3545;
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }


        .close-btn:hover {
            background-color: #c82333;
        }


    background-color: d4edda;
    color: #155724;
    padding: 15px;
    margin-bottom: 20px;
    border: 1px solid #c3e6cb;
    border-radius: 5px;
    }
</style>
