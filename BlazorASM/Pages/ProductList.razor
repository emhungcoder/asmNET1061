@page "/products"
@inject HttpClient Http

<h3 class="text-xl font-semibold mb-4">Danh sách sản phẩm</h3>

@if (products == null)
{
    <p>Đang tải...</p>
}
else
{
    <table class="table-auto w-full border border-gray-300">
        <thead>
            <tr class="bg-gray-100">
                <th class="px-4 py-2">ID</th>
                <th class="px-4 py-2">Tên</th>
                <th class="px-4 py-2">Giá</th>
                <th class="px-4 py-2">Số lượng</th>
                <th class="px-4 py-2">Hình ảnh</th>
                <th class="px-4 py-2">Trạng thái</th>
                <th class="px-4 py-2">Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in products)
            {
                <tr>
                    <td class="border px-4 py-2">@product.ProductID</td>
                    <td class="border px-4 py-2">@product.ProductName</td>
                    <td class="border px-4 py-2">@product.Price.ToString("N0")</td>
                    <td class="border px-4 py-2">@product.Quantity</td>
                    <td class="border px-4 py-2">
                        <img src="@product.Image" alt="Ảnh" class="w-16 h-16 object-cover" />
                    </td>
                    <td class="border px-4 py-2">@product.TinhTrang</td>
                    <td class="border px-4 py-2 space-x-2">
                        <button class="bg-blue-500 text-white px-2 py-1 rounded" @onclick="() => EditProduct(product.ProductID)">Sửa</button>
                        <button class="bg-red-500 text-white px-2 py-1 rounded" @onclick="() => StopProduct(product.ProductID)">Ngừng</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Product>? products;

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<List<Product>>("api/products");
    }

    private void EditProduct(int id)
    {
        // Điều hướng đến trang chỉnh sửa sản phẩm hoặc bật modal
        Console.WriteLine($"Edit product {id}");
    }

    private async Task StopProduct(int id)
    {
        var content = new MultipartFormDataContent();
        content.Add(new StringContent(id.ToString()), "ProductID");

        var response = await Http.PostAsync("api/products/stop", content);
        if (response.IsSuccessStatusCode)
        {
            var p = products?.FirstOrDefault(p => p.ProductID == id);
            if (p != null) p.TinhTrang = "Off";
        }
    }

    public class Product
    {
        public int ProductID { get; set; }
        public string ProductName { get; set; } = null!;
        public decimal Price { get; set; }
        public int Quantity { get; set; }
        public string? Color { get; set; }
        public string? Size { get; set; }
        public string? Image { get; set; }
        public string? Description { get; set; }
        public string? TinhTrang { get; set; }
        public int? CategoryID { get; set; }
        public string? CategoryName { get; set; }
    }
}